type Papeleta {
  id: Int
  nombre: String
  fecha: String
  empleado: String
  tipoper: String
  descrip: String
  detalle: String
  retorno: RetornoPa
}

type Docs {
  id: Int
  dni: String
  doc: String
  fecha: String
  tipo: TiposDocs
  permiso: PermisosDoc
  descrip: String
  Ref: String
  Inicio: String
  Fin: String
}

input DocInput {
  dni: String
  doc: String
  fecha: String
  tipo: TiposDocs
  permiso: PermisosDoc
  descrip: String
  Ref: String
  Inicio: String
  Fin: String
  range: Boolean
}

input PapeletaInput {
  nombre: String!
  fecha: String!
  empleado: String!
  tipoP: PermisosPapeleta!
  descrip: String!
  detalle: String!
  retorno: RetornoPa!
}

enum RetornoPa {
  Y
  N
}

enum TiposDocs {
  RESOLUCION
  CARTA
  INFORME
  RENUNCIA
  SOLICITUD
  MEMORANDO
}

enum PermisosDoc {
  DF
  AC
  JUSTIFICADO
  XHEL
  ONOMASTICO
  ADELANTO
  SANSION
  LICENCIA
  HORASEXTRAS
  OMISION
  OTROS
}

enum PermisosPapeleta {
  DF
  AC
  JUSTIFICADO
  OMISION
  DFXHEL
  ONOMASTICO
}

extend type Query {
  buscar_papeleta(dni: String, mes: Int): [Papeleta] #ok
  buscar_docs(dni: String, mes: Int): [Docs]
}

type Mutation {
  crear_papeleta(input: PapeletaInput): Papeleta #OK
  crear_doc(input: DocInput): Docs
  update_papeleta(input: PapeletaInput): Papeleta
}
